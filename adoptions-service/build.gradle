plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.creatureadoption.adoptions'
version = '1.0.0-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
ext {
	mapstructVersion = "1.6.3"
	lombokVersion = "1.18.36"
	lombokMapstructBindingVersion = "0.2.0"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring30x:4.6.2'
	//implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring30x:4.6.2'

	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	//runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.postgresql:postgresql'
	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}", "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	implementation 'org.apache.httpcomponents.client5:httpclient5'
}


tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.11"
}

jacocoTestReport {
	dependsOn test
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect { dir ->
			fileTree(dir: dir, exclude: [
//					'**/com/creatureadoption/adoptions/mappinglayer/AdoptionResponseMapper.class',
//					'**/com/creatureadoption/adoptions/mappinglayer/AdoptionRequestMapperImpl.class',
//					'**/com/creatureadoption/adoptions/mappinglayer/AdoptionResponseMapperImpl.class',
//					'**/com/creatureadoption/adoptions/domainclientlayer/CreatureServiceClient.class',
//					'**/com/creatureadoption/adoptions/domainclientlayer/CustomerServiceClient.class',
//					'**/com/creatureadoption/adoptions/domainclientlayer/TrainingServiceClient.class',
			])
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.90
//				minimum = 0
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification